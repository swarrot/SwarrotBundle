<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="swarrot.factory.pecl.class">Swarrot\SwarrotBundle\Broker\PeclFactory</parameter>
        <parameter key="swarrot.factory.amqp_lib.class">Swarrot\SwarrotBundle\Broker\AmqpLibFactory</parameter>
        <parameter key="swarrot.factory.sqs.class">Swarrot\SwarrotBundle\Broker\SqsFactory</parameter>
        <parameter key="swarrot.command.base.class">Swarrot\SwarrotBundle\Command\SwarrotCommand</parameter>
        <parameter key="swarrot.publisher.class">Swarrot\SwarrotBundle\Broker\Publisher</parameter>
    </parameters>

    <services>
        <service id="swarrot.factory.pecl" class="%swarrot.factory.pecl.class%">
            <argument type="service" id="swarrot.logger" />
            <tag name="swarrot.provider_factory" alias="pecl"/>
        </service>
        <service id="swarrot.factory.amqp_lib" class="%swarrot.factory.amqp_lib.class%">
            <tag name="swarrot.provider_factory" alias="amqp_lib"/>
        </service>
        <service id="swarrot.factory.sqs" class="%swarrot.factory.sqs.class%">
            <tag name="swarrot.provider_factory" alias="sqs"/>
        </service>

        <service id="swarrot.command.base" class="%swarrot.command.base.class%" abstract="true">
            <argument /> <!-- name -->
            <argument /> <!-- connection name -->
            <argument /> <!-- processor -->
            <argument /> <!-- middleware stack -->
            <argument /> <!-- extra -->
            <argument /> <!-- queue -->
            <call method="setContainer">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <service id="swarrot.publisher" class="%swarrot.publisher.class%">
            <argument type="service" id="swarrot.factory.default" />
            <argument type="service" id="event_dispatcher" />
            <argument>%swarrot.messages_types%</argument>
            <argument type="service" id="swarrot.logger" />
        </service>

        <!-- Processor Configurators -->
        <service id="swarrot.processor.ack"
                 class="Swarrot\SwarrotBundle\Processor\Ack\AckProcessorConfigurator">
            <argument>Swarrot\Processor\Ack\AckProcessor</argument>
            <argument type="service" id="swarrot.factory.default"/>
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.doctrine_connection"
                 class="Swarrot\SwarrotBundle\Processor\Doctrine\ConnectionProcessorConfigurator">
            <argument>Swarrot\Processor\Doctrine\ConnectionProcessor</argument>
            <argument type="service" id="doctrine" on-invalid="ignore"/>
        </service>
        <service id="swarrot.processor.doctrine_object_manager"
                 class="Swarrot\SwarrotBundle\Processor\Doctrine\ObjectManagerProcessorConfigurator">
            <argument>Swarrot\Processor\Doctrine\ObjectManagerProcessor</argument>
            <argument type="service" id="doctrine" on-invalid="ignore"/>
        </service>
        <service id="swarrot.processor.exception_catcher"
                 class="Swarrot\SwarrotBundle\Processor\ExceptionCatcher\ExceptionCatcherProcessorConfigurator">
            <argument>Swarrot\Processor\ExceptionCatcher\ExceptionCatcherProcessor</argument>
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.max_execution_time"
                 class="Swarrot\SwarrotBundle\Processor\MaxExecutionTime\MaxExecutionTimeProcessorConfigurator">
            <argument>Swarrot\Processor\MaxExecutionTime\MaxExecutionTimeProcessor</argument>
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.max_messages"
                 class="Swarrot\SwarrotBundle\Processor\MaxMessages\MaxMessagesProcessorConfigurator">
            <argument>Swarrot\Processor\MaxMessages\MaxMessagesProcessor</argument>
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.retry"
                 class="Swarrot\SwarrotBundle\Processor\Retry\RetryProcessorConfigurator">
            <argument>Swarrot\Processor\Retry\RetryProcessor</argument>
            <argument type="service" id="swarrot.factory.default"/>
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.signal_handler"
                 class="Swarrot\SwarrotBundle\Processor\SignalHandler\SignalHandlerProcessorConfigurator">
            <argument>Swarrot\Processor\SignalHandler\SignalHandlerProcessor</argument>
            <argument type="service" id="swarrot.logger"/>
        </service>

        <service id="swarrot.processor.insomniac"
                 class="Swarrot\SwarrotBundle\Processor\Insomniac\InsomniacProcessorConfigurator">
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.instant_retry"
                 class="Swarrot\SwarrotBundle\Processor\InstantRetry\InstantRetryProcessorConfigurator">
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.memory_limit"
                 class="Swarrot\SwarrotBundle\Processor\MemoryLimit\MemoryLimitProcessorConfigurator">
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.new_relic"
                 class="Swarrot\SwarrotBundle\Processor\NewRelic\NewRelicProcessorConfigurator">
        </service>
        <service id="swarrot.processor.rpc_client"
                 class="Swarrot\SwarrotBundle\Processor\RPC\RpcClientProcessorConfigurator">
            <argument type="service" id="swarrot.logger"/>
        </service>
        <service id="swarrot.processor.rpc_server"
                 class="Swarrot\SwarrotBundle\Processor\RPC\RpcServerProcessorConfigurator">
            <argument type="service" id="swarrot.factory.default"/>
            <argument type="service" id="swarrot.logger"/>
        </service>
    </services>
</container>